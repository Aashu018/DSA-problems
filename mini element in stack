

class GfG
{
    int minEle;
    Stack<Integer> s;
    
    // Constructor    
    GfG()
	{
      s = new Stack<>();
	}
	
    /*returns min element from stack*/
    int getMin()
    {
	// Your code here
	 
           //Write your code here
           if(s.size()==0){
               return -1;
           }else {
               return minEle;
           }
    }
    
    /*returns poped element from stack*/
    int pop()
    {
	// Your code here
	if(s.size()==0){
               return -1;
           }else {
               if(s.peek()>=minEle){
                  return s.pop();
               }else{
                   int pomp = s.pop();
                   int tempmin = minEle;
                   minEle = 2*minEle - pomp;
                   return tempmin;
               }
           }
    }

    /*push element x into the stack*/
    void push(int x)
    {
	// Your code here	
	if(s.size()==0){
               s.push(x);
               minEle=x;
           }else {
               if(x>=minEle){
                   s.push(x);
               }else{
                  s.push(2*x - minEle);
                   minEle = x;
                   
               }
           }
    }	
}
